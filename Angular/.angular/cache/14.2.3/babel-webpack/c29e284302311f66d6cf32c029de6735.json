{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/general.service\";\nimport * as i2 from \"@angular/common\";\nexport let ShinguruComponent = /*#__PURE__*/(() => {\n  class ShinguruComponent {\n    constructor(generalService) {\n      this.generalService = generalService;\n      this.unsubOnDestroy = new Subject();\n      this.backToProjectList = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.isDarkMode = this.generalService.GetDarkModeStatus();\n      this.generalService.subjectToggleDarkMode.pipe(takeUntil(this.unsubOnDestroy)).subscribe({\n        next: () => {\n          this.isDarkMode = !this.isDarkMode;\n        }\n      });\n      this.projectsSectionRef = document.querySelector(\"#projects\");\n    }\n\n    ngOnDestroy() {\n      this.unsubOnDestroy.next(true);\n      this.unsubOnDestroy.complete();\n    }\n\n    BackToProjectList() {\n      this.backToProjectList.emit();\n      this.projectsSectionRef.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n\n  }\n\n  ShinguruComponent.ɵfac = function ShinguruComponent_Factory(t) {\n    return new (t || ShinguruComponent)(i0.ɵɵdirectiveInject(i1.GeneralService));\n  };\n\n  ShinguruComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShinguruComponent,\n    selectors: [[\"app-shinguru\"]],\n    outputs: {\n      backToProjectList: \"backToProjectList\"\n    },\n    decls: 15,\n    vars: 4,\n    consts: [[1, \"project-container\"], [3, \"ngClass\"], [1, \"text-primary\", 3, \"ngClass\"], [1, \"project-details\", 3, \"ngClass\"], [\"src\", \"../../../assets/images/projects/shinguru/project-shinguru.jpg\", \"alt\", \"shinguru image\", 1, \"main-image\"], [1, \"project-description\"], [1, \"text-secondary\"], [1, \"project-gallery\"], [\"src\", \"../../../assets/images/projects/shinguru/1.jpg\", \"alt\", \"shinguru-photo-1\"], [\"src\", \"../../../assets/images/projects/shinguru/2.jpg\", \"alt\", \"shinguru-photo-2\"], [\"type\", \"button\", 1, \"back-button\", 3, \"ngClass\", \"click\"]],\n    template: function ShinguruComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Shinguru\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\", 2);\n        i0.ɵɵtext(4, \" Shinguru is an upcoming 2D action-platformer game in which you embody an over-caffeinated mercenary slaying colossal demons while embarking on a journey through a world that mixes both sci-fi and fantasy. Through narratively driven levels, fluid combat, and parkour-esque movement, meet characters from all walks of life and learn that no one is ever truly alone when facing challenges life puts in your way. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"img\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"p\", 6);\n        i0.ɵɵtext(9, \" I lead the programming department and implement a wide range of assets that requires C# in Unity. I primarily work on implementing player mechanics such as melee combat, locomotion, wall jumping, ledge climbing, etc. Development is still ongoing. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelement(11, \"img\", 8)(12, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ShinguruComponent_Template_button_click_13_listener() {\n          return ctx.BackToProjectList();\n        });\n        i0.ɵɵtext(14, \"Back\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.isDarkMode ? \"dark-mode-text\" : \"light-mode-text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.isDarkMode ? \"dark-mode-text\" : \"light-mode-text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.isDarkMode ? \"dark-mode-text\" : \"light-mode-text\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", ctx.isDarkMode ? \"dark-mode-text dark-mode-button-border\" : \"light-mode-text light-mode-button-border\");\n      }\n    },\n    dependencies: [i2.NgClass],\n    styles: [\".project-container[_ngcontent-%COMP%]{margin-top:-10rem;display:flex;flex-direction:column;justify-content:center;align-items:center}.back-button[_ngcontent-%COMP%]{-webkit-appearance:none;appearance:none;background-color:transparent;border-radius:.2em;padding:.2em 1em;cursor:pointer;font-size:3rem;font-weight:700;transition:.5s cubic-bezier(.23,1,.32,1);-webkit-user-select:none;user-select:none;margin-top:5rem}.back-button[_ngcontent-%COMP%]:hover{background-color:#8f1d2140;border:.2rem solid #8F1D21}h1[_ngcontent-%COMP%]{font-size:5rem;margin-bottom:1em}.main-image[_ngcontent-%COMP%]{width:40rem;height:23rem;border-radius:.5rem}.text-primary[_ngcontent-%COMP%]{font-size:2rem;width:70rem;margin-bottom:2rem}.text-secondary[_ngcontent-%COMP%]{font-size:1.5rem;margin-left:4rem;width:50rem;line-height:1.5em}.project-details[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.project-description[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:flex-start}.project-gallery[_ngcontent-%COMP%]{margin-top:5rem;display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-items:center;gap:3rem}.project-gallery[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:40rem;height:22rem}\"]\n  });\n  return ShinguruComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}